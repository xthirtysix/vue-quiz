{"remainingRequest":"/home/x36/git/vue-quiz/node_modules/babel-loader/lib/index.js!/home/x36/git/vue-quiz/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/x36/git/vue-quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/x36/git/vue-quiz/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/x36/git/vue-quiz/src/components/Question.vue","mtime":1592290774843},{"path":"/home/x36/git/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBNQVRIX0FERCA9IDA7CnZhciBNQVRIX0VYQ0xVREUgPSAxOwp2YXIgVkFSSUFOVFNfUkFOR0UgPSAxMDsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvbjogJ09vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nLi4uJywKICAgICAgY29ycmVjdEFuc3dlcjogMCwKICAgICAgdmFyaWFudHM6IFt7CiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSwKICAgICAgICB2YWx1ZTogMAogICAgICB9LCB7CiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSwKICAgICAgICB2YWx1ZTogMAogICAgICB9LCB7CiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSwKICAgICAgICB2YWx1ZTogMAogICAgICB9LCB7CiAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSwKICAgICAgICB2YWx1ZTogMAogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlUmFuZG9tTnVtYmVyOiBmdW5jdGlvbiBnZW5lcmF0ZVJhbmRvbU51bWJlcihtaW4sIG1heCwgZXhjbHVkZSkgewogICAgICB2YXIgZ2VuZXJhdGVkID0gTWF0aC5yb3VuZChtaW4gKyBNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikpOwoKICAgICAgaWYgKGV4Y2x1ZGUgJiYgZ2VuZXJhdGVkID09PSBleGNsdWRlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVSYW5kb21OdW1iZXIobWluLCBtYXgsIGV4Y2x1ZGUpOwogICAgICB9CgogICAgICByZXR1cm4gZ2VuZXJhdGVkOwogICAgfSwKICAgIGdlbmVyYXRlUXVlc3Rpb246IGZ1bmN0aW9uIGdlbmVyYXRlUXVlc3Rpb24oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZmlyc3ROdW1iZXIgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKDEsIDEwMCk7CiAgICAgIHZhciBzZWNvbmROdW1iZXIgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKDEsIDEwMCk7CiAgICAgIHZhciBvcGVyYXRpb24gPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKE1BVEhfQURELCBNQVRIX0VYQ0xVREUpOwoKICAgICAgc3dpdGNoIChvcGVyYXRpb24pIHsKICAgICAgICBjYXNlIE1BVEhfQUREOgogICAgICAgICAgdGhpcy5xdWVzdGlvbiA9ICIiLmNvbmNhdChmaXJzdE51bWJlciwgIiArICIpLmNvbmNhdChzZWNvbmROdW1iZXIsICIgPSA/Iik7CiAgICAgICAgICB0aGlzLmNvcnJlY3RBbnN3ZXIgPSBmaXJzdE51bWJlciArIHNlY29uZE51bWJlcjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIE1BVEhfRVhDTFVERToKICAgICAgICAgIHRoaXMucXVlc3Rpb24gPSAiIi5jb25jYXQoZmlyc3ROdW1iZXIsICIgLSAiKS5jb25jYXQoc2Vjb25kTnVtYmVyLCAiID0gPyIpOwogICAgICAgICAgdGhpcy5jb3JyZWN0QW5zd2VyID0gZmlyc3ROdW1iZXIgLSBzZWNvbmROdW1iZXI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRoaXMucXVlc3Rpb24gPSAnT29wcy4uLiBzb21ldGhpbmcgd2VudCB3cm9uZyc7CiAgICAgIH0KCiAgICAgIHZhciBudW1iZXJzID0gW107CgogICAgICB3aGlsZSAobnVtYmVycy5sZW5ndGggPCB0aGlzLnZhcmlhbnRzLmxlbmd0aCkgewogICAgICAgIHZhciBnZW5lcmF0ZWROdW1iZXIgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKHRoaXMuY29ycmVjdEFuc3dlciAtIFZBUklBTlRTX1JBTkdFLCB0aGlzLmNvcnJlY3RBbnN3ZXIgKyBWQVJJQU5UU19SQU5HRSwgdGhpcy5jb3JyZWN0QW5zd2VyKTsKCiAgICAgICAgaWYgKG51bWJlcnMuaW5kZXhPZihnZW5lcmF0ZWROdW1iZXIpID09PSAtMSkgewogICAgICAgICAgbnVtYmVycy5wdXNoKGdlbmVyYXRlZE51bWJlcik7CiAgICAgICAgfQogICAgICB9CgogICAgICBudW1iZXJzLmZvckVhY2goZnVuY3Rpb24gKG51bWJlciwgaSkgewogICAgICAgIF90aGlzLnZhcmlhbnRzW2ldLnZhbHVlID0gbnVtYmVyOwogICAgICAgIGNvbnNvbGUubG9nKG51bWJlcik7CiAgICAgIH0pOwogICAgICB2YXIgY29ycmVjdFZhcmlhbnQgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKDAsIHRoaXMudmFyaWFudHMubGVuZ3RoKTsKICAgICAgdGhpcy52YXJpYW50c1tjb3JyZWN0VmFyaWFudF0gPSB7CiAgICAgICAgaXNDb3JyZWN0OiB0cnVlLAogICAgICAgIHZhbHVlOiB0aGlzLmNvcnJlY3RBbnN3ZXIKICAgICAgfTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdlbmVyYXRlUXVlc3Rpb24oKTsKICB9Cn07"},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,QAAA,GAAA,CAAA;AACA,IAAA,YAAA,GAAA,CAAA;AACA,IAAA,cAAA,GAAA,EAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,+BADA;AAEA,MAAA,aAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,CACA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,SAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA;AAHA,KAAA;AAUA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA,gCACA,GADA,EACA,GADA,EACA,OADA,EACA;AACA,UAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,MAAA,MAAA,GAAA,GAAA,GAAA,CAAA,CAAA;;AACA,UAAA,OAAA,IAAA,SAAA,KAAA,OAAA,EAAA;AACA,eAAA,KAAA,oBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,OAAA,CAAA;AACA;;AACA,aAAA,SAAA;AACA,KAPA;AAQA,IAAA,gBARA,8BAQA;AAAA;;AACA,UAAA,WAAA,GAAA,KAAA,oBAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,UAAA,YAAA,GAAA,KAAA,oBAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,oBAAA,CAAA,QAAA,EAAA,YAAA,CAAA;;AAEA,cAAA,SAAA;AACA,aAAA,QAAA;AACA,eAAA,QAAA,aAAA,WAAA,gBAAA,YAAA;AACA,eAAA,aAAA,GAAA,WAAA,GAAA,YAAA;AACA;;AACA,aAAA,YAAA;AACA,eAAA,QAAA,aAAA,WAAA,gBAAA,YAAA;AACA,eAAA,aAAA,GAAA,WAAA,GAAA,YAAA;AACA;;AACA;AACA,eAAA,QAAA,GAAA,8BAAA;AAVA;;AAaA,UAAA,OAAA,GAAA,EAAA;;AAEA,aAAA,OAAA,CAAA,MAAA,GAAA,KAAA,QAAA,CAAA,MAAA,EAAA;AACA,YAAA,eAAA,GAAA,KAAA,oBAAA,CACA,KAAA,aAAA,GAAA,cADA,EAEA,KAAA,aAAA,GAAA,cAFA,EAGA,KAAA,aAHA,CAAA;;AAMA,YAAA,OAAA,CAAA,OAAA,CAAA,eAAA,MAAA,CAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,eAAA;AACA;AACA;;AAEA,MAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,GAAA,MAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OAHA;AAKA,UAAA,cAAA,GAAA,KAAA,oBAAA,CAAA,CAAA,EAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AAEA,WAAA,QAAA,CAAA,cAAA,IAAA;AACA,QAAA,SAAA,EAAA,IADA;AACA,QAAA,KAAA,EAAA,KAAA;AADA,OAAA;AAGA;AAlDA,GAbA;AAiEA,EAAA,OAjEA,qBAiEA;AACA,SAAA,gBAAA;AACA;AAnEA,CAAA","sourcesContent":["<template>\n  <b-card\n    tag=\"question\"\n    style=\"max-width: 40rem; margin: 0 auto;\"\n    class=\"mb-2\"\n  >\n    <template v-slot:header>\n      <h3>{{ question }}</h3>\n    </template>\n\n    <ul>\n      <li :key=\"i\" v-for=\"(variant, i) in variants\">\n        <b-button\n          href=\"#\"\n          class=\"variant\"\n          variant=\"primary\">\n          {{variant.value}}\n        </b-button>\n      </li>\n    </ul>\n  </b-card>\n</template>\n\n<script>\nconst MATH_ADD = 0;\nconst MATH_EXCLUDE = 1;\nconst VARIANTS_RANGE = 10;\n\nexport default {\n  data() {\n    return {\n      question: 'Oops, something went wrong...',\n      correctAnswer: 0,\n      variants: [\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n      ],\n    };\n  },\n  methods: {\n    generateRandomNumber(min, max, exclude) {\n      const generated = Math.round(min + Math.random() * (max - min));\n      if (exclude && generated === exclude) {\n        return this.generateRandomNumber(min, max, exclude);\n      }\n      return generated;\n    },\n    generateQuestion() {\n      const firstNumber = this.generateRandomNumber(1, 100);\n      const secondNumber = this.generateRandomNumber(1, 100);\n      const operation = this.generateRandomNumber(MATH_ADD, MATH_EXCLUDE);\n\n      switch (operation) {\n        case (MATH_ADD):\n          this.question = `${firstNumber} + ${secondNumber} = ?`;\n          this.correctAnswer = firstNumber + secondNumber;\n          break;\n        case (MATH_EXCLUDE):\n          this.question = `${firstNumber} - ${secondNumber} = ?`;\n          this.correctAnswer = firstNumber - secondNumber;\n          break;\n        default:\n          this.question = 'Oops... something went wrong';\n      }\n\n      const numbers = [];\n\n      while (numbers.length < this.variants.length) {\n        const generatedNumber = this.generateRandomNumber(\n          this.correctAnswer - VARIANTS_RANGE,\n          this.correctAnswer + VARIANTS_RANGE,\n          this.correctAnswer,\n        );\n\n        if (numbers.indexOf(generatedNumber) === -1) {\n          numbers.push(generatedNumber);\n        }\n      }\n\n      numbers.forEach((number, i) => {\n        this.variants[i].value = number;\n        console.log(number);\n      });\n\n      const correctVariant = this.generateRandomNumber(0, this.variants.length);\n\n      this.variants[correctVariant] = {\n        isCorrect: true, value: this.correctAnswer,\n      };\n    },\n  },\n  created() {\n    this.generateQuestion();\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\nul {\n  display: grid;\n  grid-template-columns: 40% 40%;\n  grid-row-gap: 2rem;\n  grid-column-gap: 20%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nli {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.variant {\n  display: block;\n  width: 100%;\n  min-width: 22px;\n  min-height: 22px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}