{"remainingRequest":"/home/x36/git/vue-quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/x36/git/vue-quiz/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/x36/git/vue-quiz/src/components/Question.vue","mtime":1592290774843},{"path":"/home/x36/git/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/x36/git/vue-quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IE1BVEhfQUREID0gMDsKY29uc3QgTUFUSF9FWENMVURFID0gMTsKY29uc3QgVkFSSUFOVFNfUkFOR0UgPSAxMDsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlc3Rpb246ICdPb3BzLCBzb21ldGhpbmcgd2VudCB3cm9uZy4uLicsCiAgICAgIGNvcnJlY3RBbnN3ZXI6IDAsCiAgICAgIHZhcmlhbnRzOiBbCiAgICAgICAgeyBpc0NvcnJlY3Q6IGZhbHNlLCB2YWx1ZTogMCB9LAogICAgICAgIHsgaXNDb3JyZWN0OiBmYWxzZSwgdmFsdWU6IDAgfSwKICAgICAgICB7IGlzQ29ycmVjdDogZmFsc2UsIHZhbHVlOiAwIH0sCiAgICAgICAgeyBpc0NvcnJlY3Q6IGZhbHNlLCB2YWx1ZTogMCB9LAogICAgICBdLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlUmFuZG9tTnVtYmVyKG1pbiwgbWF4LCBleGNsdWRlKSB7CiAgICAgIGNvbnN0IGdlbmVyYXRlZCA9IE1hdGgucm91bmQobWluICsgTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKTsKICAgICAgaWYgKGV4Y2x1ZGUgJiYgZ2VuZXJhdGVkID09PSBleGNsdWRlKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVSYW5kb21OdW1iZXIobWluLCBtYXgsIGV4Y2x1ZGUpOwogICAgICB9CiAgICAgIHJldHVybiBnZW5lcmF0ZWQ7CiAgICB9LAogICAgZ2VuZXJhdGVRdWVzdGlvbigpIHsKICAgICAgY29uc3QgZmlyc3ROdW1iZXIgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKDEsIDEwMCk7CiAgICAgIGNvbnN0IHNlY29uZE51bWJlciA9IHRoaXMuZ2VuZXJhdGVSYW5kb21OdW1iZXIoMSwgMTAwKTsKICAgICAgY29uc3Qgb3BlcmF0aW9uID0gdGhpcy5nZW5lcmF0ZVJhbmRvbU51bWJlcihNQVRIX0FERCwgTUFUSF9FWENMVURFKTsKCiAgICAgIHN3aXRjaCAob3BlcmF0aW9uKSB7CiAgICAgICAgY2FzZSAoTUFUSF9BREQpOgogICAgICAgICAgdGhpcy5xdWVzdGlvbiA9IGAke2ZpcnN0TnVtYmVyfSArICR7c2Vjb25kTnVtYmVyfSA9ID9gOwogICAgICAgICAgdGhpcy5jb3JyZWN0QW5zd2VyID0gZmlyc3ROdW1iZXIgKyBzZWNvbmROdW1iZXI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIChNQVRIX0VYQ0xVREUpOgogICAgICAgICAgdGhpcy5xdWVzdGlvbiA9IGAke2ZpcnN0TnVtYmVyfSAtICR7c2Vjb25kTnVtYmVyfSA9ID9gOwogICAgICAgICAgdGhpcy5jb3JyZWN0QW5zd2VyID0gZmlyc3ROdW1iZXIgLSBzZWNvbmROdW1iZXI7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhpcy5xdWVzdGlvbiA9ICdPb3BzLi4uIHNvbWV0aGluZyB3ZW50IHdyb25nJzsKICAgICAgfQoKICAgICAgY29uc3QgbnVtYmVycyA9IFtdOwoKICAgICAgd2hpbGUgKG51bWJlcnMubGVuZ3RoIDwgdGhpcy52YXJpYW50cy5sZW5ndGgpIHsKICAgICAgICBjb25zdCBnZW5lcmF0ZWROdW1iZXIgPSB0aGlzLmdlbmVyYXRlUmFuZG9tTnVtYmVyKAogICAgICAgICAgdGhpcy5jb3JyZWN0QW5zd2VyIC0gVkFSSUFOVFNfUkFOR0UsCiAgICAgICAgICB0aGlzLmNvcnJlY3RBbnN3ZXIgKyBWQVJJQU5UU19SQU5HRSwKICAgICAgICAgIHRoaXMuY29ycmVjdEFuc3dlciwKICAgICAgICApOwoKICAgICAgICBpZiAobnVtYmVycy5pbmRleE9mKGdlbmVyYXRlZE51bWJlcikgPT09IC0xKSB7CiAgICAgICAgICBudW1iZXJzLnB1c2goZ2VuZXJhdGVkTnVtYmVyKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIG51bWJlcnMuZm9yRWFjaCgobnVtYmVyLCBpKSA9PiB7CiAgICAgICAgdGhpcy52YXJpYW50c1tpXS52YWx1ZSA9IG51bWJlcjsKICAgICAgICBjb25zb2xlLmxvZyhudW1iZXIpOwogICAgICB9KTsKCiAgICAgIGNvbnN0IGNvcnJlY3RWYXJpYW50ID0gdGhpcy5nZW5lcmF0ZVJhbmRvbU51bWJlcigwLCB0aGlzLnZhcmlhbnRzLmxlbmd0aCk7CgogICAgICB0aGlzLnZhcmlhbnRzW2NvcnJlY3RWYXJpYW50XSA9IHsKICAgICAgICBpc0NvcnJlY3Q6IHRydWUsIHZhbHVlOiB0aGlzLmNvcnJlY3RBbnN3ZXIsCiAgICAgIH07CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2VuZXJhdGVRdWVzdGlvbigpOwogIH0sCn07Cg=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <b-card\n    tag=\"question\"\n    style=\"max-width: 40rem; margin: 0 auto;\"\n    class=\"mb-2\"\n  >\n    <template v-slot:header>\n      <h3>{{ question }}</h3>\n    </template>\n\n    <ul>\n      <li :key=\"i\" v-for=\"(variant, i) in variants\">\n        <b-button\n          href=\"#\"\n          class=\"variant\"\n          variant=\"primary\">\n          {{variant.value}}\n        </b-button>\n      </li>\n    </ul>\n  </b-card>\n</template>\n\n<script>\nconst MATH_ADD = 0;\nconst MATH_EXCLUDE = 1;\nconst VARIANTS_RANGE = 10;\n\nexport default {\n  data() {\n    return {\n      question: 'Oops, something went wrong...',\n      correctAnswer: 0,\n      variants: [\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n        { isCorrect: false, value: 0 },\n      ],\n    };\n  },\n  methods: {\n    generateRandomNumber(min, max, exclude) {\n      const generated = Math.round(min + Math.random() * (max - min));\n      if (exclude && generated === exclude) {\n        return this.generateRandomNumber(min, max, exclude);\n      }\n      return generated;\n    },\n    generateQuestion() {\n      const firstNumber = this.generateRandomNumber(1, 100);\n      const secondNumber = this.generateRandomNumber(1, 100);\n      const operation = this.generateRandomNumber(MATH_ADD, MATH_EXCLUDE);\n\n      switch (operation) {\n        case (MATH_ADD):\n          this.question = `${firstNumber} + ${secondNumber} = ?`;\n          this.correctAnswer = firstNumber + secondNumber;\n          break;\n        case (MATH_EXCLUDE):\n          this.question = `${firstNumber} - ${secondNumber} = ?`;\n          this.correctAnswer = firstNumber - secondNumber;\n          break;\n        default:\n          this.question = 'Oops... something went wrong';\n      }\n\n      const numbers = [];\n\n      while (numbers.length < this.variants.length) {\n        const generatedNumber = this.generateRandomNumber(\n          this.correctAnswer - VARIANTS_RANGE,\n          this.correctAnswer + VARIANTS_RANGE,\n          this.correctAnswer,\n        );\n\n        if (numbers.indexOf(generatedNumber) === -1) {\n          numbers.push(generatedNumber);\n        }\n      }\n\n      numbers.forEach((number, i) => {\n        this.variants[i].value = number;\n        console.log(number);\n      });\n\n      const correctVariant = this.generateRandomNumber(0, this.variants.length);\n\n      this.variants[correctVariant] = {\n        isCorrect: true, value: this.correctAnswer,\n      };\n    },\n  },\n  created() {\n    this.generateQuestion();\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\nul {\n  display: grid;\n  grid-template-columns: 40% 40%;\n  grid-row-gap: 2rem;\n  grid-column-gap: 20%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\nli {\n  width: 50%;\n  margin: 0 auto;\n}\n\n.variant {\n  display: block;\n  width: 100%;\n  min-width: 22px;\n  min-height: 22px;\n}\n</style>\n"]}]}